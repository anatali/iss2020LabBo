System  /* -trace */ -msglog demo_req_a 
 	//"tcp://mqtt.eclipse.org:1883"
	//mqtt.eclipse.org
	//tcp://test.mosquitto.org
	//mqtt.fluux.io
	//"tcp://broker.hivemq.com" 
 
//mqttBroker "broker.hivemq.com" : 1883

Request r1 : r1(X) 
Request r2 : r2(X) 
Reply   a1 : a1(X)   

Context ctxdemoreqa ip [host="localhost" port=8010]   //for first run (debug)
//Context ctxcallera ip [host="localhost" port=8072]  
//Context ctxcalleda ip [host="127.0.0.1" port=8074]  

QActor callera1 context ctxdemoreqa {
	State init initial {
		//[# sysUtil.logMsgs = true #]
		println("	callera1 starts")
		request calleda -m r1 : r1(10)
 		delay 50 
		request calleda -m r1 : r1(20)
	}
	Goto work 
	
	State work{
//		println("	callera1 work")
	}
	Transition t0 
		whenReply   a1 -> handleReply
	
	State handleReply{
		printCurrentMessage
 	}
	Goto work	
} 
QActor callera2 context ctxdemoreqa {
	State init initial {
		println("	callera2 starts")
		request calleda -m r1 : r1(100)
 		delay 500
		request calleda -m r1 : r1(200)
	}
	Goto work 
	
	State work{
//		println("	callera2 work")
	}
	Transition t0 
		whenReply   a1 -> handleReply
	
	State handleReply{
		printCurrentMessage
 	}
	Goto work	
} 

QActor calleda context ctxdemoreqa {
 
	State init initial {
//		println("calleda waits ...") 
	}
	Transition t0  
		whenRequest r1 -> handleRequest
 
	State handleRequest{  
		printCurrentMessage		 
 		onMsg( r1 : r1(X) ){  
 			[# val Answer = "${currentMsg.msgSender()}_${payloadArg(0)}" #]
 			replyTo r1 with a1 : a1( $Answer )  
 		} 
	} 
	Goto init   
}   
 
 