/*
 * This model gives essential and relevant information about
 * 	     STRUCTURE, INTERACTION and BEHAVIOR
 * about the system
 * 
 * The model is EXECUTABLE
 */

System  gettaskdeploy 
 	//"tcp://mqtt.eclipse.org:1883"
	//mqtt.eclipse.org
	//tcp://test.mosquitto.org
	//mqtt.fluux.io
	//"tcp://broker.hivemq.com" 

mqttBroker "broker.hivemq.com" : 1883 eventTopic "unibo/tasks/events"

Request getmeatask : getmeatask(NAME,MATR,MAIL)
Reply   tasktodo   : tasktodo(NAME) 

Context ctxgettaskdeploy ip [host="127.0.0.1" port=8025] 

QActor taskdeploy context ctxgettaskdeploy{
[#
	val EsPrefix    =  "es"
	var Counter     =  0
	var Esname      = ""
#]
	State s0 initial { 
		
	} 
	Transition t0 whenRequest getmeatask -> assignatask
	
	State assignatask{
		onMsg( getmeatask : getmeatask( NAME, MATR, MAIL )){
			[#
				var studentName  = payloadArg(0) 
				var studentbadge = payloadArg(1)
				var studentmail  = payloadArg(2)
				var esindex      = Counter++ % 5 
				Esname           = "$EsPrefix${esindex}"
			#]
			run utils.append("$studentName | $studentbadge | $Esname | $studentmail") 
			println("taskdeploy | assignatask to $studentName badge=$studentbadge mail=$studentmail")
		}
		replyTo getmeatask with tasktodo : tasktodo( $Esname )
	}
	Transition t0 whenRequest getmeatask -> assignatask 
}

